name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
    paths-ignore:
      - 'README.md'

  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - requested

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@v0.11.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

  checkout:
    runs-on: ubuntu-latest
    needs: cancel-previous-runs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

  setup-python:
    runs-on: ubuntu-latest
    needs: checkout

    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

  install-dependencies:
    runs-on: ubuntu-latest
    needs: setup-python

    steps:
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  run-tests:
    runs-on: ubuntu-latest
    needs: install-dependencies

    steps:
      - name: Run tests
        run: pytest

  additional-tests:
    runs-on: ubuntu-latest
    needs: run-tests

    steps:
      - name: Run additional tests
        run: |
          pytest --cov
          pytest --flake8

  build-and-push:
    runs-on: ubuntu-latest
    needs: additional-tests
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.ref_name }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Pull repository on server
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          DEPLOY_DIRECTORY: ${{ secrets.DEPLOY_DIRECTORY }}
        run: |
          ssh $VPS_USER@$VPS_HOST "
            if [ ! -d \"$DEPLOY_DIRECTORY\" ]; then
              git clone https://github.com/${{ github.repository }} $DEPLOY_DIRECTORY;
            else
              cd $DEPLOY_DIRECTORY && git pull;
            fi
          "

      - name: Deploy to server
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          DEPLOY_DIRECTORY: ${{ secrets.DEPLOY_DIRECTORY }}
        run: |
          ssh $VPS_USER@$VPS_HOST "
            cd $DEPLOY_DIRECTORY &&
            docker-compose pull &&
            docker-compose up -d --build
          "